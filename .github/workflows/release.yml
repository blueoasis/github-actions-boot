name: Deploy to ECR on Merge

on:
  pull_request:
    types: [closed]
    branches:
      - master
      - development

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read


    steps:
      - name: Check out merged code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Read version from VERSION file
        id: read_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon Public ECR
        run: |
          aws ecr-public get-login-password \
            | docker login --username AWS \
              --password-stdin public.ecr.aws

      - name: Build, tag, and push image to Public ECR
        env:
          ECR_ALIAS: ${{ secrets.ECR_PUBLIC_ALIAS }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          VERSION: ${{ env.VERSION }}
        run: |
          IMAGE_URI=public.ecr.aws/$ECR_ALIAS/$ECR_REPOSITORY

          docker build -t $IMAGE_URI:$VERSION .
          docker push $IMAGE_URI:$VERSION

          # Also push "latest"
          docker tag $IMAGE_URI:$VERSION $IMAGE_URI:latest
          docker push $IMAGE_URI:latest

      - name: Show image URI
        run: |
          echo "Published Image URI: public.ecr.aws/${{ secrets.ECR_PUBLIC_ALIAS }}/${{ secrets.ECR_REPOSITORY }}:${{ env.VERSION }}"
