<<<<<<< HEAD
name: Deploy to ECR on Merge

on:
  push:
    branches:
      - master
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
      - development
>>>>>>> b0adacf (Development (#11))
=======
    paths:
      - 'VERSION'
>>>>>>> 65f97bc (Feat GitHub actions (#18))
=======
>>>>>>> 97b6515 (Development (#13))

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Check out merged code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

<<<<<<< HEAD
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

<<<<<<< HEAD
=======
      - name: Read version from VERSION file
        id: read_version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

>>>>>>> b0adacf (Development (#11))
=======
>>>>>>> 97b6515 (Development (#13))
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon Public ECR
        run: |
          aws ecr-public get-login-password \
            | docker login --username AWS \
              --password-stdin public.ecr.aws

      - name: Build, tag, and push image to Public ECR
        env:
          ECR_ALIAS: ${{ secrets.ECR_PUBLIC_ALIAS }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
<<<<<<< HEAD
<<<<<<< HEAD
        run: |
          VERSION=$(cat VERSION)
          IMAGE_URI=public.ecr.aws/$ECR_ALIAS/$ECR_REPOSITORY

          echo "Tagging image as: $VERSION"

          docker build -t $IMAGE_URI:$VERSION .
          docker push $IMAGE_URI:$VERSION

=======
          VERSION: ${{ env.VERSION }}
=======
>>>>>>> 97b6515 (Development (#13))
        run: |
          VERSION=$(cat VERSION)
          IMAGE_URI=public.ecr.aws/$ECR_ALIAS/$ECR_REPOSITORY

          echo "Tagging image as: $VERSION"

          docker build -t $IMAGE_URI:$VERSION .
          docker push $IMAGE_URI:$VERSION

<<<<<<< HEAD
          # Also push "latest"
>>>>>>> b0adacf (Development (#11))
=======
>>>>>>> 97b6515 (Development (#13))
          docker tag $IMAGE_URI:$VERSION $IMAGE_URI:latest
          docker push $IMAGE_URI:latest

      - name: Show image URI
<<<<<<< HEAD
<<<<<<< HEAD
        env:
          ECR_ALIAS: ${{ secrets.ECR_PUBLIC_ALIAS }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          VERSION=$(cat VERSION)
          echo "Published Image URI: public.ecr.aws/$ECR_ALIAS/$ECR_REPOSITORY:$VERSION"
=======
        run: |
          echo "Published Image URI: public.ecr.aws/${{ secrets.ECR_PUBLIC_ALIAS }}/${{ secrets.ECR_REPOSITORY }}:${{ env.VERSION }}"
>>>>>>> b0adacf (Development (#11))
=======
        env:
          ECR_ALIAS: ${{ secrets.ECR_PUBLIC_ALIAS }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          VERSION=$(cat VERSION)
          echo "Published Image URI: public.ecr.aws/$ECR_ALIAS/$ECR_REPOSITORY:$VERSION"
>>>>>>> 97b6515 (Development (#13))
=======
#name: Deploy to ECR on Merge
#
#on:
#  push:
#    branches:
#      - master
#    paths:
#      - 'VERSION'
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#
#    steps:
#      - name: Check out merged code
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.event.pull_request.merge_commit_sha }}
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v3
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#          aws-region: us-east-1
#
#      - name: Log in to Amazon Public ECR
#        run: |
#          aws ecr-public get-login-password \
#            | docker login --username AWS \
#              --password-stdin public.ecr.aws
#
#      - name: Build, tag, and push image to Public ECR
#        env:
#          ECR_ALIAS: ${{ secrets.ECR_PUBLIC_ALIAS }}
#          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
#        run: |
#          VERSION=$(cat VERSION)
#          IMAGE_URI=public.ecr.aws/$ECR_ALIAS/$ECR_REPOSITORY
#
#          echo "Tagging image as: $VERSION"
#
#          docker build -t $IMAGE_URI:$VERSION .
#          docker push $IMAGE_URI:$VERSION
#
#          docker tag $IMAGE_URI:$VERSION $IMAGE_URI:latest
#          docker push $IMAGE_URI:latest
#
#      - name: Show image URI
#        env:
#          ECR_ALIAS: ${{ secrets.ECR_PUBLIC_ALIAS }}
#          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
#        run: |
#          VERSION=$(cat VERSION)
#          echo "Published Image URI: public.ecr.aws/$ECR_ALIAS/$ECR_REPOSITORY:$VERSION"
>>>>>>> 6a85867 (commented out release.yml, added master branch to test action)
